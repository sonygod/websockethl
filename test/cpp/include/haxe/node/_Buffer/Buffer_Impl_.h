// Generated by Haxe 4.2.0-rc.1+d0fd88b9b
#ifndef INCLUDED_haxe_node__Buffer_Buffer_Impl_
#define INCLUDED_haxe_node__Buffer_Buffer_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(haxe,io,ArrayBufferViewImpl)
HX_DECLARE_CLASS3(haxe,node,_Buffer,Buffer_Impl_)

namespace haxe{
namespace node{
namespace _Buffer{


class HXCPP_CLASS_ATTRIBUTES Buffer_Impl__obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Buffer_Impl__obj OBJ_;
		Buffer_Impl__obj();

	public:
		enum { _hx_ClassId = 0x00f71dcf };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="haxe.node._Buffer.Buffer_Impl_")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"haxe.node._Buffer.Buffer_Impl_"); }

		inline static ::hx::ObjectPtr< Buffer_Impl__obj > __new() {
			::hx::ObjectPtr< Buffer_Impl__obj > __this = new Buffer_Impl__obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< Buffer_Impl__obj > __alloc(::hx::Ctx *_hx_ctx) {
			Buffer_Impl__obj *__this = (Buffer_Impl__obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Buffer_Impl__obj), false, "haxe.node._Buffer.Buffer_Impl_"));
			*(void **)__this = Buffer_Impl__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Buffer_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Buffer_Impl_",c0,05,dc,e4); }

		static  ::haxe::io::ArrayBufferViewImpl _new(int n);
		static ::Dynamic _new_dyn();

		static  ::haxe::io::ArrayBufferViewImpl alloc(int size);
		static ::Dynamic alloc_dyn();

		static int readUInt8( ::haxe::io::ArrayBufferViewImpl this1,::hx::Null< int >  offset);
		static ::Dynamic readUInt8_dyn();

		static int readInt8( ::haxe::io::ArrayBufferViewImpl this1,::hx::Null< int >  offset);
		static ::Dynamic readInt8_dyn();

		static int complement8( ::haxe::io::ArrayBufferViewImpl this1,int value);
		static ::Dynamic complement8_dyn();

		static int complement16( ::haxe::io::ArrayBufferViewImpl this1,int value);
		static ::Dynamic complement16_dyn();

		static int readUInt16LE( ::haxe::io::ArrayBufferViewImpl this1,::hx::Null< int >  offset);
		static ::Dynamic readUInt16LE_dyn();

		static int readUInt16BE( ::haxe::io::ArrayBufferViewImpl this1,::hx::Null< int >  offset);
		static ::Dynamic readUInt16BE_dyn();

		static int readInt16LE( ::haxe::io::ArrayBufferViewImpl this1,::hx::Null< int >  offset);
		static ::Dynamic readInt16LE_dyn();

		static int readInt16BE( ::haxe::io::ArrayBufferViewImpl this1,::hx::Null< int >  offset);
		static ::Dynamic readInt16BE_dyn();

		static int readUInt32LE( ::haxe::io::ArrayBufferViewImpl this1,::hx::Null< int >  offset);
		static ::Dynamic readUInt32LE_dyn();

		static int readUInt32BE( ::haxe::io::ArrayBufferViewImpl this1,::hx::Null< int >  offset);
		static ::Dynamic readUInt32BE_dyn();

		static int readInt32LE( ::haxe::io::ArrayBufferViewImpl this1,::hx::Null< int >  offset);
		static ::Dynamic readInt32LE_dyn();

		static int readInt32BE( ::haxe::io::ArrayBufferViewImpl this1,::hx::Null< int >  offset);
		static ::Dynamic readInt32BE_dyn();

		static Float readUInt64LE( ::haxe::io::ArrayBufferViewImpl this1,::hx::Null< int >  offset);
		static ::Dynamic readUInt64LE_dyn();

		static Float readUInt64BE( ::haxe::io::ArrayBufferViewImpl this1,::hx::Null< int >  offset);
		static ::Dynamic readUInt64BE_dyn();

		static void writeUInt8( ::haxe::io::ArrayBufferViewImpl this1,int offset,int value);
		static ::Dynamic writeUInt8_dyn();

		static void writeInt8( ::haxe::io::ArrayBufferViewImpl this1,int offset,int value);
		static ::Dynamic writeInt8_dyn();

		static void writeUInt16LE( ::haxe::io::ArrayBufferViewImpl this1,int offset,int value);
		static ::Dynamic writeUInt16LE_dyn();

		static void writeUInt16BE( ::haxe::io::ArrayBufferViewImpl this1,int offset,int value);
		static ::Dynamic writeUInt16BE_dyn();

		static void writeInt16LE( ::haxe::io::ArrayBufferViewImpl this1,int offset,int value);
		static ::Dynamic writeInt16LE_dyn();

		static void writeInt16BE( ::haxe::io::ArrayBufferViewImpl this1,int offset,int value);
		static ::Dynamic writeInt16BE_dyn();

		static void writeUInt32LE( ::haxe::io::ArrayBufferViewImpl this1,int offset,int value);
		static ::Dynamic writeUInt32LE_dyn();

		static void writeUInt32BE( ::haxe::io::ArrayBufferViewImpl this1,int offset,int value);
		static ::Dynamic writeUInt32BE_dyn();

		static void writeInt32LE( ::haxe::io::ArrayBufferViewImpl this1,int offset,int value);
		static ::Dynamic writeInt32LE_dyn();

		static void writeInt32BE( ::haxe::io::ArrayBufferViewImpl this1,int offset,int value);
		static ::Dynamic writeInt32BE_dyn();

};

} // end namespace haxe
} // end namespace node
} // end namespace _Buffer

#endif /* INCLUDED_haxe_node__Buffer_Buffer_Impl_ */ 
